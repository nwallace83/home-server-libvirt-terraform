defaults
    maxconn 20000
    mode    tcp
    option  dontlognull
    timeout http-request 10s
    timeout queue        1m
    timeout connect      10s
    timeout client       86400s
    timeout server       86400s
    timeout tunnel       86400s
frontend k8s-api
    bind :8443
    mode tcp
    default_backend k8s-api
backend k8s-api
    option  httpchk GET /readyz HTTP/1.0
    option  log-health-checks
    http-check expect status 200
    mode tcp
    balance roundrobin
    default-server verify none check-ssl inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 5000 maxqueue 5000 weight 100
    server controlplane1 192.168.1.5:6443 check
    #server controlplane2 192.168.1.6:6443 check
    #server controlplane3 192.168.1.7:6443 check
frontend ingress-nginx-https
    bind :32443
    mode tcp
    default_backend ingress-nginx-https
backend ingress-nginx-https
    option  httpchk GET / HTTP/1.0
    option  log-health-checks
    http-check expect status 404
    mode tcp
    balance roundrobin
    default-server verify none check-ssl inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 5000 maxqueue 5000 weight 100
    server node1 192.168.1.10:32443 check
    #server node2 192.168.1.11:32443 check
    #server node3 192.168.1.12:32443 check
frontend ingress-nginx-http
    bind :32080
    mode tcp
    default_backend ingress-nginx-http
backend ingress-nginx-http
    option  httpchk GET / HTTP/1.0
    option  log-health-checks
    http-check expect status 404
    mode tcp
    balance roundrobin
    default-server verify none inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 5000 maxqueue 5000 weight 100
    server node1 192.168.1.10:32080 check
    #server node2 192.168.1.11:32080 check
    #server node3 192.168.1.12:32080 check